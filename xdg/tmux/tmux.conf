# -------------------------------- general --------------------------------- #

# ~~ shell

# the startup  shell is  only used for  launching tmux,
# hence i set it to `/bin/sh` to avoid having an unused
# zsh process running in the background. tmux will then
# start the right shell once launched.

set-option -g default-shell '/usr/bin/zsh'

# ~~ prefix

# remap prefix from <C-b> to <M-a> because :
#
#  1/ `a` is easier to reach and is better supported on
#     different layouts (yes, i love you too, dvorak).
#
#  2/ the `alt` key is easier to reach with your thumb.
#
#  3/ (neo)vim has  a lot of `ctrl`  based key bindings
#     which are hard/unnecessary to rebind.

unbind-key C-b
set-option -g  prefix      M-a
set-option -g  prefix2     M-a
bind-key   M-a send-prefix -2

# ~~ server options

set-option -s  default-terminal   'tmux-256color'
set-option -sa terminal-overrides ',xterm-256color:RGB'
set-option -ga terminal-overrides ',xterm-256color:Tc'
set-option -s  escape-time        0
set-option -s  focus-events       on
set-option -s  exit-empty         off
set-option -s  buffer-limit       200
set-option -s  set-clipboard      on

# undercurl   support   &  underscore   colors   (needs
# tmux-3.0), respectively

set-option -sa terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set-option -sa terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# conditionally set the `copy-command` option depending
# on the available clipboard manipulation tool.

if 'command -v xclip > /dev/null' {
   set-option -s copy-command 'xclip -i -selection clipboard > /dev/null'
}
if 'command -v xsel > /dev/null' {
   set-option -s copy-command 'xsel -i -b'
}

# ~~ expect utf-8

set-option -qg  status-utf8 on
set-option -qwg utf8        on

# ~~ activity notifications

set-option -wg bell-action      none
set-option -g  visual-activity  off
set-option -g  visual-bell      off
set-option -g  visual-silence   on
set-option -wg monitor-activity on
set-option -wg monitor-bell     off

# ~~ miscellaneous options

set-option -g word-separators " =+!@#$%^&*,.<>/?;:\\|~`(){}[]\"'"
set-option -g mouse           off # keyboard masterrace
set-option -g history-limit   20000
set-option -g editor          nvim
set-option -g repeat-time     150
set-option -g wrap-search     on

# ~~ display

# start index of window with  0 since the first pane is
# almost always used for monitoring purposes.

set-option -g  base-index      0
set-option -wg pane-base-index 1

set-option -wg automatic-rename on
set-option -g  renumber-windows on

set-option -g set-titles on

set-option -g display-panes-time 1500
set-option -g display-time       500

set-option -g status-interval 10

# ------------------------------ keybindings ------------------------------- #

# ~~ disable defaults

unbind-key "\$"      # rename-session
unbind-key ","       # rename-window
unbind-key "%"       # split-window -h
unbind-key '"'       # split-window
unbind-key "}"       # swap-pane -D
unbind-key "{"       # swap-pane -U
unbind-key "["       # paste-buffer
unbind-key "]"
unbind-key "'"       # select-window
unbind-key "n"       # next-window
unbind-key "p"       # previous-window
unbind-key "l"       # last-window
unbind-key "M-n"     # next window with alert
unbind-key "M-p"     # next window with alert
unbind-key "o"       # focus thru panes
unbind-key "&"       # kill-window
unbind-key "#"       # list-buffer
unbind-key "="       # choose-buffer
unbind-key "z"       # zoom-pane
unbind-key "M-Up"    # resize 5 rows up
unbind-key "M-Down"  # resize 5 rows down
unbind-key "M-Right" # resize 5 rows right
unbind-key "M-Left"  # resize 5 rows left

# ~~ window/pane keybindings

# quick reload configuration

bind-key M-r                                   \
   source-file     ~/.config/tmux/tmux.conf \; \
   display-message "Configuration reloaded"

# rename current session/window

bind-key r command-prompt -I '#{window_name}'  "rename-window '%%'"
bind-key R command-prompt -I '#{session_name}' "rename-session '%%'"

# new window/session, retaining current working directory

bind-key c   new-window -c '#{pane_current_directory}'
bind-key M-c new-window -c '#{pane_current_directory}'

bind-key s   new-session -c '#{pane_current_directory}'
bind-key M-s new-session -c '#{pane_current_directory}'

# split panes

bind-key |    split-window -h -c '#{pane_current_path}'
bind-key M-\\ split-window -h -c '#{pane_current_path}'
bind-key _    split-window -v -c '#{pane_current_path}'
bind-key M--  split-window -v -c '#{pane_current_path}'

# resize panes

bind-key -r h resize-pane -L
bind-key -r l resize-pane -R
bind-key -r j resize-pane -D
bind-key -r k resize-pane -U

bind-key -r H resize-pane -L 10
bind-key -r L resize-pane -R 10
bind-key -r J resize-pane -D 10
bind-key -r K resize-pane -U 10

# zooming

bind-key = resize-pane -Z

# selection and swapping

bind-key -r M-[ previous-window
bind-key -r M-] next-window
bind-key -r Tab last-window

bind-key -r [   select-pane -t :.-
bind-key -r ]   select-pane -t :.+
bind-key -r M-o swap-pane   -D

# swap panes  back and  forth with  first pane  when in
# horizontal/vertical layouts, the biggest/widest panel
# is always #1.

bind-key \\ if '[ #{pane_index} -eq 1 ]' {
   swap-pane -s '!'
} {
   select-pane -t:.1 ; swap-pane -d -t 1 -s '!'
}

# detach from session

bind-key d detach
bind-key D if -F '#{session_many_attached}' {
   confirm-before -p 'Detach other clients ? (y/n)' 'detach -a'
} {
   display-message 'Session has only 1 client attached'
}

# kill pane/window/session

bind-key x   kill-pane
bind-key X   kill-window
bind-key M-x confirm-before -p 'Kill other windows ? (y/n)' 'kill-window -a'
bind-key Q   confirm-before -p 'Kill session #S ? (y/n)'    'kill-session'

# ~~ copy mode

set-option -g status-keys emacs
set-option -g mode-keys   vi

# trigger copy-mode

bind-key y copy-mode
bind-key / copy-mode \; send-key ?

# copy-mode modes

bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi v      send -X begin-selection
bind-key -T copy-mode-vi C-v    send -X rectangle-toggle
bind-key -T copy-mode-vi V      send -X select-line

if 'command -v xclip > /dev/null' {
   bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel \
      'xclip -i -f -selection primary | xclip -i -selection clipboard'
}
if 'command -v xsel > /dev/null' {
   bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xsel -i --clipboard'
}

bind-key -T copy-mode-vi u send-key -X halfpage-up
bind-key -T copy-mode-vi d send-key -X halfpage-down

bind-key -T copy-mode-vi * if -F '#{selection_active}' {
   send-key -X  copy-pipe
   send-key -FX search-forward-text '#{buffer_sample}'
} {
   send-key -FX search-forward '#{copy_cursor_word}'
}
bind-key -T copy-mode-vi \# if -F '#{selection_active}' {
   send-key -X  copy-pipe
   send-key -FX search-backward-text '#{buffer_sample}'
   send-key -X  search-again
} {
   send-key -FX search-backward-text '#{copy_cursor_word}'
}

# ~~ miscellaneous

# cancel prefix

bind-key Escape run 'true'

# hide status bar on demand

bind-key B if -F '#{==:#{status},on}' {
   set status off
} {
   set status on
}

# others

if 'command -v xclip > /dev/null' {
   bind-key p run \
      'tmux set-buffer "$(xclip -out -selection clipboard)"; tmux paste-buffer'
}
if 'command -v xsel > /dev/null' {
   bind-key p run \
      'tmux set-buffer "$(xsel -i --clipboard); tmux paste-buffer'
}

bind-key M-p choose-buffer
bind-key M-c choose-client
bind-key M-t choose-tree
bind-key M-s choose-session
bind-key M-w choose-window

# ----------------------------- user interface ----------------------------- #

# ~~ colors (taken from gruvbox) :
#
# #282828 - bg
# #1d2021 - bg0_h
# #282828 - bg0
# #32302f - bg0_s
# #3c3836 - bg1
# #504945 - bg2
# #665c54 - bg3
# #7c6f64 - bg4
# #928374 - bg5
# #ebdbb2 - fg
# #a89984 - fg4
# #bdae93 - fg3
# #d5c4a1 - fg2
# #ebdbb2 - fg1
# #fbf1c7 - fg0
# #a89984 - gray
# #cc241d - red
# #fb4934 - lightred
# #98971a - green
# #b8bb26 - lightgreen
# #458588 - blue
# #83a598 - lightblue
# #d79921 - yellow
# #fabd2f - lightyellow
# #b16286 - purple
# #d3869b - lightpurple
# #689d6a - aqua
# #8ec07c - lightaqua
# #d65d0e - orange
# #fe8019 - lightorange

# ~~ powerline glyphs :
#
#  e0a0 -  | e0a1 -  | e0a2 -  | e0a3 -  | e0b0 - 
#  e0b1 -  | e0b2 -  | e0b3 -  | e0b4 -  | e0b5 - 
#  e0b6 -  | e0b7 -  | e0b8 -  | e0b9 -  | e0ba - 
#  e0bb -  | e0bc -  | e0bd -  | e0be -  | e0bf - 
#  e0c0 -  | e0c1 -  | e0c2 -  | e0c3 -  | e0c4 - 
#  e0c5 -  | e0c6 -  | e0c7 -  | e0c8 -  | e0ca - 
#  e0cc -  | e0cd -  | e0ce -  | e0cf -  | e0d0 - 
#  e0d1 -  | e0d2 -  | e0d4 - 

# ~~ unicode glyphs :
#
#  2b24 - ⬤ | 25cf - ● | 2b22 - ⬢ | 2b21 - ⬡ | 2744 - ❄
#  21dd - ⇝ | 2192 - → | 21a6 - ↦

# ~~ status bar

set-option -g status-position top
set-option -g status-justify  left
set-option -g status-style    bg=#1d2021,fg=#ebdbb2,none

# left side

set-option -g status-left '\
#[fg=#1d2021#,bg=#3c3836]#{?client_prefix,#[fg=#cc241d],} ⬤ \
#[fg=#3c3836#,bg=#1d2021]'

# right side

set-option -g status-right-length 30
set-option -g status-right '\
#[fg=#3c3836,bg=default]\
#[fg=#d79921,bg=#3c3836] %H:%M \
#[fg=#d79921] %d/%m/%y \
#[fg=#3c3836#,bg=#1d2021]\
#[fg=#1d2021#,bg=#3c3836]#{?client_prefix,#[fg=#cc241d],} ⬤ '

# window tab style

set-option -wg window-style        bg=#1d2021
set-option -wg window-active-style bg=#282828

set-option -wg window-status-separator      ''
set-option -wg window-status-activity-style fg=#1d2021,bg=#ebdbb2,none
set-option -wg window-status-current-style  bg=#282828,fg=#458588

set-option -wg window-status-format '\
#{?window_activity_flag,#[fg=#ebdbb2#,bg=#1d2021],#[fg=#282828#,bg=#1d2021]}\
#{?window_activity_flag,#[fg=#282828#,bg=#ebdbb2],#[fg=#ebdbb2#,bg=#282828]} #I \
#{?window_activity_flag,#[fg=#ebdbb2#,bg=#928374],#[fg=#282828#,bg=#3c3836]}\
#{?window_activity_flag,#[fg=#3c3836#,bg=#928374],#[fg=#ebdbb2#,bg=#3c3836]} #W \
#{?window_activity_flag,#[fg=#928374#,bg=#1d2021],#[fg=#3c3836#,bg=#1d2021]}'

set-option -wg window-status-current-format '\
#[fg=#282828#,bg=#1d2021]\
#[fg=#fe8019#,bg=#282828] #I \
#[fg=#282828#,bg=#3c3836]\
#[fg=#d65d0e#,bg=#3c3836] #W \
#[fg=#3c3836#,bg=#1d2021]'

# ~~ message bar

set-option -g message-style fg=#fb4934

# ~~ panes

# default style

set-option -g pane-border-lines        single
set-option -g pane-border-style        fg=#fe8019,bg=#1d2021
set-option -g pane-active-border-style fg=#282828,bg=#1d2021

